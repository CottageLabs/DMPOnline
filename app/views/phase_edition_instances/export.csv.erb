<%-
  require 'csv'
  csv_string = CSV.generate(:col_sep => ",", :row_sep => "\r\n") do |csv|
    csv << [t('dmp.template_question'), t('dmp.dcc_equivalent'), t('dmp.response')]
    qs = export_questions(@pei, @doc[:selection], @doc[:include_conditional], @doc[:exclude_unanswered])
    qs.each do |section|
      unless section[:heading].blank?
        csv << ["#{section[:number]}  #{wipe_html(section[:heading])}", "", ""]
      end
      grid_q = ''
      section[:template_clauses].each do |q|
        if q[:is_grid]
          grid_q = "#{q[:number]}  #{wipe_html(q[:question])}".lstrip
        end 
        q[:answers].each do |a|
          dcc = ''
          if @doc[:dcc_question_numbers] && a[:dmp_number].present?
            dcc = "#{a[:dmp_number]} "
          end
          if @doc[:include_dcc_questions]
            dcc += wipe_html(a[:dmp_clause])
          end
          if q[:grid] == 0
            csv << ["#{q[:number]}  #{wipe_html(q[:question])}".lstrip, dcc, response_text_format(a[:response])]
          else
            csv << [grid_q, "#{q[:number]}  #{wipe_html(q[:question])}".lstrip, response_text_format(a[:response])]
          end
        end
      end
    end
  end

-%>
<%= raw csv_string %>
