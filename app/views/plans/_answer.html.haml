= f.semantic_fields_for :answers, answer do |a|
  - dcc_q = a.object.dcc_question
  - if dcc_q.nil?
    - dependency = q.dependency
    - q_kind = q.kind
    - q_id = q.id
    - q_dependency_value = q.dependency_value
    - q_number = q.number_display
    - q_options = q.options
  - else
    - dependency = Question.find(dcc_q.id).dependency
    - q_kind = dcc_q.kind
    - q_id = dcc_q.id
    - q_dependency_value = dcc_q.dependency_value
    - q_number = "DCC #{dcc_q_numbering[dcc_q.id]}"
    - q_options = dcc_q.options

  - d = dependency.try(:form_source).blank? ? '' : "#answer_row_#{dependency.id} .input-area #{dependency.form_source}"
  - oid = "answer_row_#{q_id}"
  - dt = "##{oid}"
  - if q.has_answer? && q.answers.count < 2
    - dt = "#{dt}|#question_row_#{q.id}"
    - oid = nil
  %tr{id: oid, data: {dependency: d, being: q_dependency_value, target: dt}}
    - if q.is_column?
      - a.object.grid_row = grid_row(q.parent.id)
      - a.object.answer = a.object.part(grid_row(q.parent.id))
    - else
      %td.question-area
        - if dcc_q.nil?
          = t('dmp.no_dcc_equivalent')
          -# Not allowing these to be hidden since there is no way of reinstating them yet!
        - else
          %div.dcc_number= q_number
          %div.dcc_question
            = sanitize dcc_q.question
            .hide_opt
              = a.inputs do
                = a.input :hidden, :input_html => { class: "monitor" }

    %td.input-area
      = a.inputs do
        - if q.is_column?
          = a.input :grid_row, :as => :hidden
        - case q_kind
          - when 'b'
            = a.input :answer, :as => :radio, :collection => {t('dmp.boolean_yes') => '1', t('dmp.boolean_no') => '0'}, :label => false, :input_html => {class: 'monitor'}
          - when 't'
            = a.input :answer, :as => :text, :input_html => {class: 'wysiwyg_opt monitor'}, :label => false, :rows => 3
          - when 'u'
            = a.input :answer, :as => :url, :label => false, :input_html => {class: 'monitor'}
          - when 's'
            = a.input :answer, :as => :select, :collection => question_options(q_options), :label => false, :wrapper_html => {class: 'monitor'}
          - when 'r'
            = a.input :answer, :as => :radio, :collection => question_options(q_options), :label => false, :wrapper_html => {class: 'monitor list'}
          - when 'l'
            - a.object.answer = a.object.answer.split('|') unless a.object.answer.blank?
            = a.input :answer, :as => :check_boxes, :collection => question_options(q_options), :label => false, :wrapper_html => {class: 'monitor list'}

      = boilerplate_list(a.object)
    %td.guidance-area
      = template_reference_list(a.object, q_number)
